/*
 * XyLabelTemplateImageJPanel.java
 *
 * Created on 17 November 2008, 16:29
 */

package com.xyratex.label.apps.gui.components;

import java.io.InputStream;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import java.awt.Color;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;

 import java.awt.Graphics2D;
 import java.awt.Graphics;

import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;

import com.xyratex.label.output.print.offset.XyOffsetSum;
        
import com.xyratex.label.apps.gui.XyLabelPrintConfigApp;

/**
 *
 * @author  rdavis
 */
public class XyLabelTemplateImageJPanel extends javax.swing.JPanel {

    /** Creates new form XyLabelTemplateImageJPanel */
    public XyLabelTemplateImageJPanel() {
        initComponents();
    }
    
    public void setOffsetSum( XyOffsetSum sum )
    {
        xyOffsetSum = sum;
    }
    
    	/**
	 * The background behind the label. When the label is offset, this colour
	 * has the purpose of making it easy to see how big the offset is
	 */
	private static final Color originalLabelPosition = Color.RED;
    
        	private static Log log = LogFactory.getLog(XyLabelTemplateImageJPanel.class);
     
        private BufferedImage pngAsBufferedImage = null;
        
        
        private XyLabelPrintConfigApp app = null;
        
        
        
      	private InputStream imageAsInputStream = null;
    
        private XyOffsetSum xyOffsetSum = null;
        
          /**
   * holds the label template in bitmap form
   */
	private ByteArrayOutputStream bos = null;
       
     public void setXyLabelPrintConfigApp( XyLabelPrintConfigApp a )
     {
         app = a;
     }
        
        /**
     * Paint this component, for example called by the Java graphical user interface 
     * and when an update to the appearance of this component is required.
     */
    public void paintComponent(Graphics g) 
    {
      log.trace("paintComponent");  
      
      super.paintComponent(g);
      Graphics2D g2 = (Graphics2D)g;
      
      try
      {
        if ( pngAsBufferedImage != null )
        {
          g2.setColor(originalLabelPosition);
	  g2.fillRect( 0, 0, pngAsBufferedImage.getWidth(), pngAsBufferedImage.getHeight()) ;
	      
          log.trace("drawImage");  
          g2.drawImage(pngAsBufferedImage, xyOffsetSum.getSumOffsetXAsPx(), xyOffsetSum.getSumOffsetYAsPx(), this);
        }
      }
      catch (Exception ex) 
      {
        ex.printStackTrace();
      }
    }
    
      	public void setImage( ByteArrayOutputStream imageAsBOS )
  	{
            if ( imageAsBOS != null )
            {
  	  imageAsInputStream = new ByteArrayInputStream(imageAsBOS.toByteArray());
          
          try
          {
          pngAsBufferedImage = ImageIO.read(imageAsInputStream);
            }
          catch( Exception e )
          {
              app.error(e);
          }
  	}
        }
    


  	


    
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
